daemon off;
worker_processes auto;

events {
  use epoll;
  accept_mutex on;
  worker_connections 512;
}

http {
  gzip on;
  gzip_comp_level 6;
  gzip_min_length 512;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_vary on;
  gzip_proxied any;

  server_tokens off;


  access_log logs/access.log;



  error_log stderr error;


  include mime.types;
  default_type application/octet-stream;
  sendfile on;


  server {
    listen <%= ENV["PORT"] %>;
    charset UTF-8;
    port_in_redirect off;
    keepalive_timeout 5;
    root dist/;


  location = /index.html {
    add_header Cache-Control "no-store, no-cache";
    add_header Strict-Transport-Security "max-age=31536002;";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    try_files $uri $uri/ =404;
  }

  location / {
    add_header 'Cache-Control' "public, max-age=3600";

    try_files $uri $uri/ /index.html;
  }

  location /manifest.json {
    add_header Cache-Control "no-store, no-cache";
    add_header Access-Control-Allow-Origin "*";

    try_files $uri $uri/ =404;
  }

  # Cache assets for a long time, since all of them get unique names on each build
  location ~ ^/assets/[^/]*$ {
    add_header Cache-Control "public, max-age=31536000";
    add_header Access-Control-Allow-Origin "*";

    try_files $uri $uri/ =404;
  }


  # need this b/c setting $fallback to =404 will try #{root}=404 instead of returning a 404
  location @404 {
    return 404;
  }

  # fallback proxy named match


  # fallback redirects named match


  }
}